package org.motechproject.hub.mds.service;

import org.motechproject.hub.mds.HubSubscription;
import org.motechproject.mds.annotations.Lookup;
import org.motechproject.mds.annotations.LookupField;
import org.motechproject.mds.service.MotechDataService;

import java.util.List;

/**
 * Data Service interface for {@link org.motechproject.hub.mds.HubSubscription}.
 * The implementation is generated by the Motech Data Services module at runtime.
 */
public interface HubSubscriptionMDSService extends
        MotechDataService<HubSubscription> {

    /**
     * Finds all <code>HubSubscription</code>s with given topic id.
     *
     * @param hubTopicId the id of the topic
     * @return list of the matching hub subscriptions
     */
    @Lookup(name = "By Topic")
    List<HubSubscription> findSubByTopicId(
            @LookupField(name = "hubTopicId") Integer hubTopicId);

    /**
     * Finds all <code>HubSubscription</code>s with given callback url.
     *
     * @param callbackUrl the callback url to be searched for
     * @return list of the matching hub subscriptions
     */
    @Lookup(name = "By CallbackUrl")
    List<HubSubscription> findSubByCallbackUrl(
            @LookupField(name = "callbackUrl") String callbackUrl);

    /**
     * Finds all <code>HubSubscription</code>s with given topic id
     * and given callback url.
     *
     * @param callbackUrl the callback url to be searched for
     * @param hubTopicId the id of the topic
     * @return list of the matching hub subscriptions
     */
    @Lookup(name = "By CallbackUrl and Topic")
    List<HubSubscription> findSubByCallbackUrlAndTopicId(
            @LookupField(name = "callbackUrl") String callbackUrl,
            @LookupField(name = "hubTopicId") Integer hubTopicId);

}
